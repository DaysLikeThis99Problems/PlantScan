<!DOCTYPE html>
<html>
  <head>
    <title>Plant Analysis</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
      }
      .container {
        display: flex;
        flex-direction: column;
        gap: 20px;
      }
      .upload-section {
        text-align: center;
        padding: 20px;
        border: 2px dashed #ccc;
        border-radius: 8px;
      }
      .preview-image {
        max-width: 300px;
        margin: 10px 0;
        display: none;
      }
      .result-section {
        display: none;
        margin-top: 20px;
      }
      .result-container {
        display: flex;
        gap: 20px;
      }
      .image-container {
        flex: 1;
      }
      .analysis-container {
        flex: 2;
        padding: 20px;
        background: #f9f9f9;
        border-radius: 8px;
      }
      .error {
        color: red;
        margin: 10px 0;
        padding: 10px;
        background: #fff0f0;
        border-radius: 4px;
        display: none;
      }
      .loading {
        display: none;
        text-align: center;
        padding: 20px;
      }
      button {
        padding: 10px 20px;
        background: #4caf50;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
      }
      button:hover {
        background: #45a049;
      }
      input[type="file"] {
        margin: 10px 0;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>Plant Analysis</h1>

      <!-- Error Display -->
      <div
        id="error"
        class="error"
        style="display: <%= error ? 'block' : 'none' %>"
      >
        <%= error || '' %>
      </div>

      <!-- Upload Section -->
      <div class="upload-section" id="uploadSection">
        <h2>Upload Plant Image</h2>
        <form id="analyzeForm" enctype="multipart/form-data">
          <input
            type="file"
            name="image"
            accept="image/jpeg,image/png"
            required
          />
          <br />
          <img id="preview" class="preview-image" />
          <br />
          <button type="submit">Analyze Plant</button>
        </form>
      </div>

      <!-- Loading Indicator -->
      <div id="loading" class="loading">
        Analyzing your plant... Please wait...
      </div>

      <!-- Results Section -->
      <div
        id="resultSection"
        class="result-section"
        style="display: <%= result ? 'block' : 'none' %>"
      >
        <h2>Analysis Results</h2>
        <div class="result-container">
          <div class="image-container">
            <img
              src="<%= result?.imageUrl || '' %>"
              alt="Analyzed plant"
              style="max-width: 100%"
            />
          </div>
          <div class="analysis-container">
            <pre><%= result?.analysis || '' %></pre>
          </div>
        </div>
      </div>
    </div>

    <script>
      const form = document.getElementById("analyzeForm");
      const preview = document.getElementById("preview");
      const loading = document.getElementById("loading");
      const resultSection = document.getElementById("resultSection");
      const errorDiv = document.getElementById("error");

      // Preview image before upload
      form.image.addEventListener("change", (e) => {
        const file = e.target.files[0];
        if (file) {
          preview.src = URL.createObjectURL(file);
          preview.style.display = "inline";
        }
      });

      // Handle form submission
      form.addEventListener("submit", async (e) => {
        e.preventDefault();

        // Reset display
        errorDiv.style.display = "none";
        loading.style.display = "block";
        resultSection.style.display = "none";

        const formData = new FormData(form);

        try {
          const response = await fetch("/analyze", {
            method: "POST",
            body: formData,
          });

          if (!response.ok) {
            const contentType = response.headers.get("content-type");
            if (contentType && contentType.includes("application/json")) {
              const errorData = await response.json();
              throw new Error(errorData.error || "Failed to analyze image");
            } else {
              const html = await response.text();
              document.body.innerHTML = html;
              return;
            }
          }

          const contentType = response.headers.get("content-type");
          if (contentType && contentType.includes("application/json")) {
            const jsonResult = await response.json();
            if (jsonResult.error) {
              throw new Error(jsonResult.error);
            }
            // Update the UI with JSON result
            resultSection.querySelector("img").src = jsonResult.data.imageUrl;
            resultSection.querySelector("pre").textContent =
              jsonResult.data.analysis;
            resultSection.style.display = "block";
          } else {
            // Handle HTML response
            const html = await response.text();
            document.body.innerHTML = html;
          }
        } catch (error) {
          console.error("Analysis error:", error);
          errorDiv.textContent = error.message || "Failed to analyze image";
          errorDiv.style.display = "block";
        } finally {
          loading.style.display = "none";
        }
      });
    </script>
  </body>
</html>
